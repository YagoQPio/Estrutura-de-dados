#include <stdlib.h>
#include <stdio.h>
#include <time.h>
//////////////////////////////////////////////////////////////
//programa que implementa a Ordena√ßao topologica de um grafo//
//////////////////////////////////////////////////////////////

//declaracao do tamanho de grafo
const int tamanho = 500;

//funcao que cria o grafo
void criar(int grafo[tamanho][tamanho], int aleatorio){
    int i =0;
    int j=0;
    int conexao =0;

    for(i = 0; i < tamanho; i++){
        for(j =0; j < tamanho; j++){
            grafo[i][j] = 0;

            if (aleatorio){
                conexao = (rand()%2);
            }else{
                printf("Digite <1>  se %d esta conectado a %d:", i, j);
                scanf("%d", &conexao);
            }
            grafo[i][j] = conexao;
        }
    }
}
//funcao recorsiva que ordena topologicamente o grafo
void ordenarTopologicoRecursivo(int grafo[tamanho][tamanho], int visitado[tamanho], int vertice){
    int i;

    visitado[vertice] = 1;

    for(i = 0; i < tamanho; i++){
        if((grafo[vertice][i])&&(!visitado[i])){
            ordenarTopologicoRecursivo(grafo, visitado, i);
        }
    }
    printf("%d\t", vertice);
}
//funcao que ordena toplogicamente o grafo
void ordenarTopologico(int grafo[tamanho][tamanho]){
    int vertice;
    int visitado[tamanho];

    for(vertice = 0; vertice < tamanho; vertice++){
        visitado[vertice] = 0;
    }
    for(vertice = 0; vertice < tamanho; vertice++){
        if (! visitado[vertice]){
            ordenarTopologicoRecursivo(grafo, visitado, vertice);
        }
    }
    printf("%n");
}
//funcao principal de execucao do programa
int main (){
    time_t t;
    srand((unsigned) time (&t));

    int grafo[tamanho][tamanho];

    criar(grafo, 1);

    ordenarTopologico(grafo);
}
