#include <stdio.h>
#include <stdlib.h>
#include <time.h>
//Progama que implementa uma arvore binaria e suas respectivas navegacoes
//Declaracao de estruturas
struct no {
    int numero;
    struct no *esquerda;
    struct no *direita;
};

//Funcao que insere um no na arvore
struct no *inserir(struct no *raiz, int numero){
    //Caso facil
    if (raiz == NULL){
        raiz = (struct no *) malloc(sizeof(struct no));
        raiz -> numero = numero;
        raiz -> esquerda = NULL;
        raiz -> direita = NULL;
    } else {
        if ((rand()%2)==0){
            raiz -> esquerda = inserir(raiz -> esquerda, numero);
        }else{
            raiz -> direita = inserir(raiz -> direita, numero);
        }
    }

    return raiz;
};
//Navegacao em PRE-Ordem

void navegarPreOrdem(struct no *raiz){
    if (raiz != NULL){
        printf("%d\t", raiz -> numero);
        navegarPreOrdem(raiz -> esquerda);
        navegarPreOrdem(raiz -> direita);
    }
}

//Navegacao em Em-Ordem

void navegarEmOrdem(struct no *raiz){
    if (raiz != NULL){
        navegarEmOrdem(raiz -> esquerda);
        printf("%d\t", raiz -> numero);
        navegarEmOrdem(raiz -> direita);
    }
}

//Navegacao em Pos-Ordem

void navegarPosOrdem(struct no *raiz){
    if (raiz != NULL){
        navegarPosOrdem(raiz -> esquerda);
        navegarPosOrdem(raiz -> direita);
        printf("%d\t", raiz -> numero);
    }
}

//Funcao principal de execucao do progama
int main (){
    //Declaraco de variavel
    struct no *raiz = NULL;

    time_t t;
    srand((unsigned)time(&t));

    int i = 0;
    for (i = 0; i <10 ;  i++){
        raiz = inserir(raiz,i);
    }

    printf("\n==================PRE-ORDEM===============\n");
    navegarPreOrdem(raiz);

     printf("\n==================EM-ORDEM===============\n");
    navegarEmOrdem(raiz);

     printf("\n==================POS-ORDEM===============\n");
    navegarPosOrdem(raiz);
}
